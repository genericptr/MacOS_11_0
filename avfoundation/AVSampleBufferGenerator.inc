{ Parsed from AVFoundation.framework AVSampleBufferGenerator.h }

{$ifdef CALLBACKS}
type
  AVSampleBufferGeneratorNotifyOfDataReadyForSampleBufferCallback = reference to procedure (dataReady: objcbool; error: NSError); cblock; cdecl;
{$endif}


{$ifdef TYPES}
type
  AVSampleBufferGeneratorPtr = ^AVSampleBufferGenerator;
  AVSampleBufferRequestPtr = ^AVSampleBufferRequest;
{$endif}

{$if defined(__NULL_MACRO__)}

{$if  not defined(TARGET_OS_IPHONE)}
{$ifdef CLASSES}

type
  AVSampleBufferGenerator = objcclass external (NSObject)
  private
    _generator: AVSampleBufferGeneratorInternal;
  public
    function initWithAsset_timebase (asset: AVAsset; timebase: CMTimebaseRef): id; message 'initWithAsset:timebase:'; { NS_DESIGNATED_INITIALIZER }
    function createSampleBufferForRequest (request: AVSampleBufferRequest): CMSampleBufferRef; message 'createSampleBufferForRequest:'; { CF_RETURNS_RETAINED }
    class procedure notifyOfDataReadyForSampleBuffer_completionHandler (sbuf: CMSampleBufferRef; completionHandler: AVSampleBufferGeneratorNotifyOfDataReadyForSampleBufferCallback); message 'notifyOfDataReadyForSampleBuffer:completionHandler:';
  end;
{$endif}

{$ifdef TYPES}
type
  AVSampleBufferRequestDirection = NSInteger;
  AVSampleBufferRequestDirectionPtr = ^AVSampleBufferRequestDirection;

const
  AVSampleBufferRequestDirectionForward = +1;
  AVSampleBufferRequestDirectionNone = 0;
  AVSampleBufferRequestDirectionReverse = -1;

type
  AVSampleBufferRequestMode = NSInteger;
  AVSampleBufferRequestModePtr = ^AVSampleBufferRequestMode;

const
  AVSampleBufferRequestModeImmediate = 0;
  AVSampleBufferRequestModeScheduled = 1;
  AVSampleBufferRequestModeOpportunistic = 2;
{$endif}

{$ifdef CLASSES}

type
  AVSampleBufferRequest = objcclass external (NSObject)
  private
    _request: AVSampleBufferRequestInternal;
  public
    function initWithStartCursor (startCursor: AVSampleCursor): id; message 'initWithStartCursor:'; { NS_DESIGNATED_INITIALIZER }
    function startCursor: AVSampleCursor; message 'startCursor';
    procedure setDirection(newValue: AVSampleBufferRequestDirection); message 'setDirection:';
    function direction: AVSampleBufferRequestDirection; message 'direction';
    procedure setLimitCursor(newValue: AVSampleCursor); message 'setLimitCursor:';
    function limitCursor: AVSampleCursor; message 'limitCursor';
    procedure setPreferredMinSampleCount(newValue: NSInteger); message 'setPreferredMinSampleCount:';
    function preferredMinSampleCount: NSInteger; message 'preferredMinSampleCount';
    procedure setMaxSampleCount(newValue: NSInteger); message 'setMaxSampleCount:';
    function maxSampleCount: NSInteger; message 'maxSampleCount';
    procedure setMode(newValue: AVSampleBufferRequestMode); message 'setMode:';
    function mode: AVSampleBufferRequestMode; message 'mode';
    procedure setOverrideTime(newValue: CMTime); message 'setOverrideTime:';
    function overrideTime: CMTime; message 'overrideTime';
  end;
{$endif}

{$endif}

{$else}
{$endif}
